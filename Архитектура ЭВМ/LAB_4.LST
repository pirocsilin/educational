Turbo Assembler	 Version 2.51	     10/09/21 15:33:14	    Page 1
Lab_4.ASM
PROG4


      1				     ;-------------------------------------------------------
      2	0000			     DATASG SEGMENT PARA
      3	0000  64			     X0	DB 64H
      4	0001  40			     X1	DB 40H
      5	0002  16			     X2	DB 16H
      6	0003  4000			     X3	DW 4000H
      7	0005  2000			     X4	DW 2000H
      8	0007  1000			     X5	DW 1000H
      9	0009  0123BC62			     Z1	DD 0123BC62H
     10	000D  0012553A			     Z2	DD 0012553AH
     11	0011  ????????			     REZ     DD	?
     12	0015			     DATASG ENDS
     13
     14	0000			     STACKSG SEGMENT 'Stack'
     15	0000  0C*(??)			     DB	12 DUP(?)
     16	000C			     STACKSG ENDS
     17
     18	0000			     CODESG SEGMENT PARA 'Code'
     19	0000				     BEGIN PROC	FAR
     20						     ASSUME SS:STACKSG,CS:CODESG,DS:DATASG
     21				     ;-----------------------------------------------------  ОПЕРАНДЫ:			    +
     22				     АДРЕСАЦИЯ	ПАМЯТИ:
     23	0000  1E				     PUSH DS		     ;корректное		     | r16	    +
     24				     Регистровая
     25	0001  2B C0				     SUB     AX, AX	     ;завершение				    +
     26				     | r16, r16	   Регистровая
     27	0003  50				     PUSH AX		     ;программы.				    +
     28				     |	   r16			   Регистровая
     29	0004  B8 0000s				     MOV     AX, DATASG	     ;загружаем номер сегмента   |    +
     30				     r16, m16	 Прямая
     31	0007  8E D8				     MOV     DS, AX	     ;в регистра DS.				    +
     32				     | r16, r16	   Регистровая
     33				     ;-----------------------------------------------------
     34				     ;	    ПРИМЕРЫ СЛОЖЕНИЯ
     35				     ;-----------------------------------------------------
     36	0009  A0 0000r				     MOV     AL, X0	     ;загруж. знач. Х0 в рег. AL	  | r8,	m8  +
     37				     Прямая
     38	000C  8A 1E 0001r			     MOV     BL, X1	     ;загруж. знач. Х1 в рег. BL	  | r8,	m8  +
     39				     Прямая
     40	0010  02 C3				     ADD     AL, BL	     ;AL = AL +	BL (X0 + X1)	       | r8, r8		    +
     41				     Регистровая
     42	0012  02 06 0002r			     ADD     AL, X2	     ;AL = AL +	X2 (X0 + X1 + X2)  | r8, m8		    +
     43				     Прямая
     44	0016  00 1E 0000r			     ADD     X0, BL	     ;X0 = X0 +	BL (X0 + X1)	       | m8, r8		    +
     45				     Прямая
     46	001A  80 C3 10				     ADD     BL, 10H	     ;BL = BL +	10h (X1	+ 10h)	       | r8, i8		    +
     47				     Непосредственная
     48	001D  80 06 0000r 25			     ADD     X0, 25H	     ;X0 = X0 +	25			       | m8, i8	    +
     49				     Непосредственная
     50
     51				     ;		     ЗАДАНИЕ: ADD <регистр>, <константа байт>	    +
     52				     (Вариант 1)
     53				     ;		     РЕШЕНИЕ:
     54	0022  2B C0				     sub ax, ax		     ;очистка регистра AX	       |    +
     55				     r16, r16	 Регистровая
     56	0024  A0 0001r				     mov al, x1		     ;загруж. знач. Х1 в рег. AL	       | r8,+
     57				     m8		     Прямая
Turbo Assembler	 Version 2.51	     10/09/21 15:33:14	    Page 2
Lab_4.ASM
PROG4


     58	0027  04 55				     add al, 55h	     ;AL = AL +	55h (40h + 55h)	       | r8, i8		    +
     59				     Непосредственная
     60				     ;-----------------------------------------------------
     61				     ;	    ПРИМЕРЫ ВЫЧИТАНИЯ
     62				     ;-----------------------------------------------------
     63	0029  A1 0003r				     MOV     AX, X3	     ;загруж. знач. Х3 в рег. AX	  | r16, m16+
     64				     Прямая
     65	002C  8B 1E 0005r			     MOV     BX, X4	     ;загруж. знач. Х4 в рег. BX	  | r16, m16+
     66				     Прямая
     67	0030  2B C3				     SUB     AX, BX	     ;AX = AX -	BX (X3 - X4)	       | r16, r16	    +
     68				     Регистровая
     69	0032  2B 06 0007r			     SUB     AX, X5	     ;AX = AX -	X5 (X3 - X4 - X5)  | r16, m16		    +
     70				     Прямая
     71	0036  29 1E 0003r			     SUB     X3, BX	     ;X3 = X3 -	BX (X3 - X4)	       | m16, r16	    +
     72				     Прямая
     73	003A  81 EB 1000			     SUB     BX, 1000H	     ;BX = BX -	1000h (X4 - 1000h) | r16, i16		    +
     74				     Непосредственная
     75	003E  81 2E 0003r 0256			     SUB     X3, 256H	     ;X3 = X3 -	256h			       | m16, i16   +
     76				     Непосредственная
     77				     ;-----------------------------------------------------
     78				     ;	    ПРИМЕР СЛОЖЕНИЯ ДВОЙНЫХ СЛОВ
     79				     ;-------------------------------------------------------------------
     80	0044  BE 0009r				     LEA SI, Z1				     ;загруж. адрес Z1 в SI	    +
     81				     | r16, m32	     Косвенная	базовая
     82	0047  BF 000Dr				     LEA DI, Z2				     ;загруж. адрес Z2 в DI	    +
     83				     | r16, m32	     Косвенная	базовая
     84	004A  BB 0011r				     LEA BX, REZ			     ;загруж. адрес REZ в BX    +
     85				     | r16, m32	     Косвенная	базовая
     86	004D  8B 04				     MOV     AX, [SI]			     ;загруж. Z1[млад. 16	    +
     87				     бит=BC62] в AX	      |	r16, m16      Косвенная базовая
     88	004F  03 05				     ADD     AX, [DI]			     ;AX = BC62	+ 553A = 119C (CF=1)	    +
     89				     | r16, m16	     Косвенная	базовая
     90	0051  89 07				     MOV     WORD PTR [BX], AX	     ;из AX в REZ[младш. слово 16	    +
     91				     бит]	   | m16, r16  Косвенная базовая
     92	0053  46				     INC SI				     ;увеличение адреса	на+
     93				     байт			     | r16	     Регистровая
     94	0054  46				     INC     SI					     ; " -- "			    +
     95				     | r16	     Регистровая
     96	0055  47				     INC     DI					     ; " -- "			    +
     97				     | r16	     Регистровая
     98	0056  47				     INC     DI					     ; " -- "			    +
     99				     | r16	     Регистровая
    100	0057  8B 04				     MOV     AX, [SI]			     ;загруж. Z1[старш. 16	    +
    101				     бит=0123] в AX| r16, m16   Косвенная базовая
    102	0059  13 05				     ADC     AX, [DI]			     ;AX = AX +	0012 + CF(1) = 136 (CF=0)|  +
    103				     r16, m16  Косвенная базовая
    104	005B  89 47 02				     MOV     WORD PTR [BX+2], AX     ;из AX в REZ[старш. слово 16	    +
    105				     бит]	   | m16, r16	   /Косвенная базовая
    106						     ;REZ = 136119C								    +
    107				     |			     \со смещением
    108				     ;-------------------------------------------------------------------
    109				     ;	    ПРИМЕР УМНОЖЕНИЯ MUL
    110				     ;-----------------------------------------------------------
    111	005E  A0 0000r				     MOV     AL, X0	     ;загрузка знач. X0 в рег. AL	    +
    112				     | r8, m8	     Прямая
    113	0061  F6 26 0001r			     MUL     X1			     ;AX = AL *	X1 (X0 * X1)			    +
    114				     | m8	     Неявная
Turbo Assembler	 Version 2.51	     10/09/21 15:33:14	    Page 3
Lab_4.ASM
PROG4


    115	0065  A1 0003r				     MOV     AX, X3	     ;загрузка знач. X3 в рег. AX	    +
    116				     | r16, m16	     Прямая
    117	0068  F7 26 0007r			     MUL     X5			     ;DX:AX = AX * X5 (X3 * X5), т.о.	     | m16  +
    118				     Неявная
    119										     ;старшее слово	в DX,		    +
    120				     младшее в AX  |
    121	006C  B9 0020				     MOV     CX, 20H	     ;загрузка конст. 20h в рег. CX	    +
    122				     | r16, i8	     Непосредственная
    123	006F  F7 E1				     MUL     CX			     ;DX:AX = AX * CX (0000 * 20h = 0)	     | r16  +
    124				     Неявная
    125				     ;-----------------------------------------------------------
    126				     ;	    ПРИМЕР УМНОЖЕНИЯ IMUL
    127				     ;-----------------------------------------------------------
    128	0071  A1 0003r				     MOV     AX, X3	     ;загрузка знач. X3 в рег. AX	    +
    129				     | r16, m16	     Прямая
    130	0074  F7 2E 0003r			     IMUL X3		     ;DX:AX = AX * X3 (X3 * X3)	- т.о.     | m16	    +
    131				     Неявная
    132										     ;старшее слово	в DX,		    +
    133				     младшее в AX  |
    134	0078  B9 FFFB				     MOV CX, -5		     ;загрузка конст. FFFB	в рег. CX	    +
    135				     | r16, i16	     Непосредственная
    136	007B  F7 E9				     IMUL CX		     ;DX:AX = AX * CX					    +
    137				     | m16	     Неявная
    138				     ;-----------------------------------------------------------
    139	007D  CB				     RET
    140	007E				     BEGIN ENDP		     ;КОНЕЦ ПРОЦЕДУРЫ
    141	007E			     CODESG ENDS		     ;КОНЕЦ СЕГМЕНТА
    142
    143				     END     BEGIN		     ;КОНЕЦ ПРОГРАММЫ
Turbo Assembler	 Version 2.51	     10/09/21 15:33:14	    Page 4
Symbol Table
PROG4



Symbol Name			  Type	 Value

??DATE				  Text	 "10/09/21"
??FILENAME			  Text	 "Lab_4	  "
??TIME				  Text	 "15:33:14"
??VERSION			  Number 0205
@CPU				  Text	 0101H
@CURSEG				  Text	 CODESG
@FILENAME			  Text	 LAB_4
@WORDSIZE			  Text	 2
BEGIN				  Far	 CODESG:0000
REZ				  Dword	 DATASG:0011
X0				  Byte	 DATASG:0000
X1				  Byte	 DATASG:0001
X2				  Byte	 DATASG:0002
X3				  Word	 DATASG:0003
X4				  Word	 DATASG:0005
X5				  Word	 DATASG:0007
Z1				  Dword	 DATASG:0009
Z2				  Dword	 DATASG:000D

Groups & Segments		  Bit Size Align  Combine Class

CODESG				  16  007E Para	  none	  CODE
DATASG				  16  0015 Para	  none
STACKSG				  16  000C Para	  none	  STACK
