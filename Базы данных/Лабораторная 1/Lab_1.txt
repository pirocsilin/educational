1.	Напишите запрос, который выводит все строки из таблицы Покупателей, для которых номер продавца равен 1001:
	SELECT * FROM cust WHERE snum=1001;

2.	Напишите запрос, который выводит таблицу Продавцов со столбцами в следующем порядке: city, sname, snum, comm:
	SELECT city, sname, snum, comm FROM sal;

3.	Напишите запрос, который выводит оценку (rating), сопровождаемую именем каждого покупателя в городе San Jose:
	SELECT rating, cname FROM cust WHERE city='San Jose';

4.	Напишите запрос, который выводит значение номера продавца всех продавцов из таблицы Заказов без каких бы то ни было повторений:
	SELECT DISTINCT snum FROM ord;

5.	Напишите запрос, который может выдать вам поля sname и city для всех продавцов в Лондоне с комиссионными строго больше 0.11:
	SELECT sname, city FROM sal WHERE city='London' AND comm>0.11;

6.	Напишите запрос к таблице Покупателей, который может вывести данные обо всех покупателях с рейтингом меньше или равным 200, если они не находятся в Риме:
	SELECT * FROM cust WHERE rating<=200 AND city<>'Rome';

7.	Запросите двумя способами все заказы на 3 и 5 октября 1990 г.:
	SELECT * FROM ord WHERE odate='03-OCT-90' OR odate='05-OCT-90';
	SELECT * FROM ord WHERE odate IN ('03-OCT-90','05-OCT-90');

8.	Напишите запрос, который может вывести всех покупателей, чьи имена начинаются с буквы, попадающей в диапазон от A до G:
	SELECT cname FROM cust WHERE cname RLIKE '^[A-G]';

9.	Напишите запрос, который выберет всех продавцов, имена которых содержат букву e:
	SELECT sname FROM sal WHERE sname LIKE '%e%';

10.	Напишите запрос, который сосчитал бы сумму всех заказов на 3 октября 1990 г.:
	SELECT SUM(amt) FROM ord WHERE odate='03-OCT-90';

11.	Напишите запрос, который сосчитал бы сумму всех заказов для продавца с номером 1001:
	SELECT SUM(amt) FROM ord WHERE snum=1001;

12.	Напишите запрос, который выбрал бы наибольший заказ для каждого продавца:
	SELECT MAX(amt),snum FROM ord GROUP BY snum;

13.	Напишите запрос, который выбрал бы покупателя, чье имя является первым в алфавитном порядке среди имен, заканчивающихся на букву s:
	SELECT MIN(cname) FROM cust WHERE cname LIKE '%s';

14.	Напишите запрос, который выбрал бы средние комиссионные в каждом городе:
	SELECT AVG(comm),city FROM sal GROUP BY city;

15.	Напишите запрос, который вывел бы для каждого заказа на 3 октября его номер, стоимость заказа в евро (1$=0.8 евро), имя продавца и размер комиссионных, полученных продавцом за этот заказ:
	SELECT onum, amt*0.8 as Amt_In_EUR, sname, amt*0.8*comm as Comm_In_EUR FROM ord, sal WHERE odate='03-OCT-90' AND ord.snum=sal.snum;

16.	Напишите запрос, который выводит номера заказов в возрастающем порядке, а также имена продавцов и покупателей заказов, продавец которых находится в Лондоне или Риме:
	SELECT onum, sname, cname FROM ord, sal, cust WHERE ord.snum=sal.snum AND ord.cnum=cust.cnum AND sal.city IN ('London', 'Rome') GROUP BY onum ASC;

17.	Запросите имена продавцов в алфавитном порядке, суммарные значения их заказов, совершенных до 5 октября, и полученные комиссионные:
	SELECT sname, SUM(amt),comm*SUM(amt) as comm FROM sal, ord WHERE odate<'05-OCT-90' AND ord.snum=sal.snum GROUP BY sname ASC;

18.	Выведите номера заказов, их стоимость и имена продавцов и покупателей, если продавцы и покупатели находятся в городах, чьи названия начинаются с букв из диапазона от L до R:
	SELECT onum, amt, sname, cname FROM ord, sal, cust WHERE ord.snum=sal.snum AND ord.cnum=cust.cnum AND sal.city RLIKE '^[L-R]' AND cust.city RLIKE '^[L-R]';

19.	Запросите все пары покупателей, обслуживаемые одним и тем же продавцом. Исключите комбинации покупателей с самими собой, а также пары в обратном порядке:
	SELECT a.cname, b.cname FROM cust a, cust b WHERE a.snum=b.snum AND a.cname<>b.cname AND a.cname<b.cname;

20.	С помощью подзапроса выведите имена всех покупателей, чьи продавцы имеют комиссионные меньше 0.13:
	SELECT cname FROM cust WHERE snum IN (SELECT snum FROM sal WHERE comm<0.13);

21.	Напишите команду, создающую копию таблицы Продавцов с одновременным копированием данных из SAMPLE.SAL. Убедитесь в сходности структур таблиц при помощи команды DESC и идентичности данных в таблице-оригинале и таблице-копии:
	CREATE TABLE copy_sal AS SELECT * FROM sal;

22.	Напишите последовательность команд, которая вставляет две новые записи в вашу таблицу Продавцов, выводит таблицу после вставки, удаляет одну запись о новом продавце и вновь выводит таблицу:
	INSERT INTO copy_sal VALUES (1008,'Tom','EKB',0.2), (1009,'Kat','Moscow',0.2);
	SELECT * FROM copy_sal;
	DELETE FROM copy_sal WHERE snum=1009;
	SELECT * FROM copy_sal;

23.	Напишите последовательность команд, которая вставляет две строки в вашу таблицу Продавцов, увеличивает в 2 раза комиссионные у всех продавцов и выводит содержимое таблицы после каждого изменения:
	INSERT INTO copy_sal VALUES (1009,'Kat','Moscow',0.2), (1010,'Peter','Rome',0.14);
	SELECT * FROM copy_sal;
	UPDATE copy_sal SET comm=comm*2;
	SELECT * FROM copy_sal;
